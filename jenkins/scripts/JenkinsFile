// pipeline {
//     agent none
//     environment {
//         // 添加 Harbor 相关环境变量
//         HARBOR_URL = "172.17.0.1:80"
//         HARBOR_PROJECT = "cloud-native-project" // 项目名称
    
//     }
//     stages {
//         stage('Clone') {
//             agent { label 'built-in' }
//             steps {
//                 echo "1. 代码克隆阶段"
//                 git url: "https://github.com/MacGuffinH/Cloud_Native_Project"
//             }
//         }
        
//         stage('Maven Build') {
//             agent {
//                 docker {
//                     image "swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/maven:latest" // 华为云公共Maven镜像
//                     args '-v /root/.m2:/root/.m2 --init'
//                 }   
//             }
//             steps {
//                 sh 'mvn -B clean package -Dmaven.test.skip=true'
//             }
//         }
        
//  stage('Image Build') {
//             agent { label 'built-in' }
//             steps {
//                 script {
//                     def dockerfileContent = """
//                         FROM swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/openjdk:11-jre-slim
//                         ARG jar_name
//                         COPY \${jar_name} app.jar
//                         ENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]
//                     """
//                     writeFile file: 'Dockerfile', text: dockerfileContent
                    
//                     sh '''
//                         docker build --build-arg jar_name=target/cloud-native-project-0.0.1-SNAPSHOT.jar \
//                             -t cloud-native-project:${BUILD_ID} .
//                     '''
                    
//                     // 添加镜像列表输出便于调试
//                     sh 'docker images'
//                 }
//             }
//         }
        
//  stage('Push') {
//             agent { label 'built-in' }
//             steps {
//                 script {
//                     echo "4. Push Docker Image Stage"
                    
//                     // 1. 登录 Harbor
//                     sh "docker login --username=admin 172.17.0.1:80 -p Harbor12345"
                    
//                     // 2. 重新打标签
//                     sh "docker tag cloud-native-project:${BUILD_ID} ${HARBOR_URL}/${HARBOR_PROJECT}/app:${BUILD_ID}"
                    
//                     // 3. 推送镜像
//                      sh "docker push ${HARBOR_URL}/${HARBOR_PROJECT}/app:${BUILD_ID}"
//                 }
//             }
//         }
        
//         stage('Deploy to K8s') {
//             agent { label 'built-in' }
//             steps {
//                 container('jnlp-kubectl') {
//                     script{ 
                        
//                         stage('Clone Deployment') {
//                             git url: "https://github.com/MacGuffinH/Cloud_Native_Project" 
//                         }
                        
//                         stage('Update YAML') {
//                             sh 'sed -i "s#{VERSION}#${BUILD_ID}#g" ./jenkins/scripts/cloud-native-project.yaml'
//                         }
                        
//                         stage('Deploy') {
//                             sh '''
//                                 kubectl apply -f ./jenkins/scripts/cloud-native-project.yaml -n yys
//                                 kubectl apply -f ./jenkins/scripts/cloud-native-project-serviceMonitor.yaml
//                             '''
//                         }
                        
//                         stage('RTF Test') {
//                             sh 'kubectl apply -f ./jenkins/scripts/rtf.yaml -n yys'
//                         }
//                     }
//                 }
//             }
//         }
//     }
    
//     post {
//         always {
//             node('built-in') {
//                 sh 'echo "清理完成"'
//             }
//         }
//     }
// }
pipeline {
    agent none
    environment {
        HARBOR_URL = "172.17.0.1:80"
        HARBOR_PROJECT = "cloud-native-project"
        // 添加镜像名称变量
        APP_NAME = "cloud-native-project"
    }
    stages {
        stage('Clone') {
            agent { label 'built-in' }
            steps {
                git url: "https://github.com/MacGuffinH/Cloud_Native_Project"
            }
        }
        
        stage('Maven Build & Test') { // 阶段重命名
            agent {
                docker {
                    image "swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/maven:latest"
                    args '-v /root/.m2:/root/.m2 --init'
                }   
            }
            steps {
                // 移除跳过测试参数，执行单元测试
                sh 'mvn -B clean package' 
            }
        }
        
        stage('Image Build') {
            agent { label 'built-in' }
            steps {
                script {
                    def dockerfile = """
                        FROM swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/openjdk:11-jre-slim
                        COPY target/${APP_NAME}-*.jar app.jar
                        ENTRYPOINT ["java","-jar","/app.jar"]
                    """
                    writeFile file: 'Dockerfile', text: dockerfile
                    
                    // 使用通配符简化 jar 包引用
                    sh "docker build -t ${APP_NAME}:${BUILD_ID} ."
                }
            }
        }
        
        stage('Push') {
            agent { label 'built-in' }
            steps {
                script  {
                        sh """
                            docker login -u admin -p Harbor12345 ${HARBOR_URL}
                            docker tag ${APP_NAME}:${BUILD_ID} ${HARBOR_URL}/${HARBOR_PROJECT}/${APP_NAME}:${BUILD_ID}
                            docker push ${HARBOR_URL}/${HARBOR_PROJECT}/${APP_NAME}:${BUILD_ID}
                        """
                    }
                
            }
        }
    }
}